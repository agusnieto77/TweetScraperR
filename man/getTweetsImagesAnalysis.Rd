% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getTweetsImagesAnalysis.R
\name{getTweetsImagesAnalysis}
\alias{getTweetsImagesAnalysis}
\title{Analyze images of tweets}
\usage{
getTweetsImagesAnalysis(
  img_url,
  modelo = "gpt-4o-mini",
  api_key = Sys.getenv("OPENAI_API_KEY"),
  dir = getwd()
)
}
\arguments{
\item{img_url}{Un vector de caracteres que contiene las URLs de las imágenes a analizar.}

\item{modelo}{Una cadena de caracteres que contiene el modelo de OpenAI. Por defecto es "gpt-4o-mini".}

\item{api_key}{Una cadena de caracteres que contiene la clave de API de OpenAI.
Por defecto es \code{Sys.getenv("OPENAI_API_KEY")}.}

\item{dir}{Una cadena de caracteres que especifica el directorio donde se
guardarán los resultados. Por defecto es \code{getwd()}.}
}
\value{
Un tibble con las siguientes columnas:
\item{clasificacion}{La clasificación de la imagen}
\item{contiene_texto}{Un booleano que indica si la imagen contiene texto}
\item{texto_contenido}{El contenido de texto de la imagen (si lo hay)}
\item{contenido_discriminatorio}{Un booleano que indica la presencia de contenido discriminatorio}
\item{contenido_violento}{Un booleano que indica la presencia de contenido violento}
\item{contenido_pornografico}{Un booleano que indica la presencia de contenido pornográfico}
\item{contenido_inapropiado}{Un booleano que indica la presencia de contenido inapropiado}
\item{descripcion}{Una descripción detallada de la imagen}
\item{url}{La URL de la imagen analizada}
}
\description{
\if{html}{\out{<a href="https://lifecycle.r-lib.org/articles/stages.html#experimental" target="_blank">}}\if{html}{\out{<img src="https://lifecycle.r-lib.org/articles/figures/lifecycle-experimental.svg" alt="[Experimental]">}}\if{html}{\out{</a>}}

Esta función analiza imágenes asociadas con tweets. Procesa un vector de URLs de imágenes,
envía estas imágenes a la API de OpenAI para su análisis y devuelve un informe detallado sobre
el contenido de cada imagen.
}
\details{
La función realiza los siguientes pasos:
\enumerate{
\item Verifica la presencia de una clave de API válida.
\item Procesa el vector de URLs de imágenes, eliminando valores NA.
\item Define un prompt de sistema detallado para la API de OpenAI, instruyéndola sobre cómo analizar las imágenes.
\item Para cada imagen:
\itemize{
\item Envía una solicitud a la API de OpenAI con la URL de la imagen.
\item Procesa la respuesta de la API para extraer los resultados del análisis.
}
\item Combina todos los resultados en un solo tibble.
\item Guarda los resultados como un archivo RDS en el directorio especificado.
}

El análisis de la imagen incluye:
\itemize{
\item Clasificación del tipo de imagen (por ejemplo, foto, meme, captura de pantalla)
\item Detección de texto en la imagen
\item Identificación de contenido discriminatorio, violento, pornográfico o inapropiado
\item Una descripción detallada del contenido de la imagen
}
}
\note{
Esta función requiere una conexión a internet activa y una clave de API de OpenAI válida para funcionar correctamente.
}
\examples{
\dontrun{
# Ejemplo de uso con un vector de URLs de imágenes
urls <- c("https://ejemplo.com/imagen1.jpg", "https://ejemplo.com/imagen2.jpg")
resultados <- getTweetsImagesAnalysis(urls)
}

}
